INFO  17:33:20,257 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  17:33:20,328 - #2 program
INFO  17:33:20,328 - #45 P
INFO  17:33:20,328 - #7 const
INFO  17:33:20,329 - #45 int
INFO  17:33:20,329 - #45 size
INFO  17:33:20,330 - #5 =
INFO  17:33:20,330 - #42 10
INFO  17:33:20,330 - #8 ;
INFO  17:33:20,331 - #11 abstract
INFO  17:33:20,332 - #15 class
INFO  17:33:20,332 - #45 Tab
INFO  17:33:20,332 - #3 {
INFO  17:33:20,333 - #45 int
INFO  17:33:20,334 - #45 size
INFO  17:33:20,334 - #8 ;
INFO  17:33:20,335 - #3 {
INFO  17:33:20,335 - #11 abstract
INFO  17:33:20,335 - #45 int
INFO  17:33:20,336 - #45 getp
INFO  17:33:20,336 - #13 (
INFO  17:33:20,336 - #45 int
INFO  17:33:20,336 - #45 i
INFO  17:33:20,336 - #14 )
INFO  17:33:20,339 - #11 abstract
INFO  17:33:20,340 - #45 int
INFO  17:33:20,340 - #45 getn
INFO  17:33:20,341 - #13 (
INFO  17:33:20,341 - #45 int
INFO  17:33:20,341 - #45 i
INFO  17:33:20,341 - #14 )
INFO  17:33:20,341 - #45 int
INFO  17:33:20,341 - #45 getSize
INFO  17:33:20,341 - #13 (
INFO  17:33:20,341 - #14 )
INFO  17:33:20,342 - #3 {
INFO  17:33:20,342 - #21 return
INFO  17:33:20,343 - #45 size
INFO  17:33:20,343 - #8 ;
INFO  17:33:20,343 - #4 }
INFO  17:33:20,344 - #4 }
INFO  17:33:20,344 - #4 }
INFO  17:33:20,345 - #15 class
INFO  17:33:20,345 - #45 Table
INFO  17:33:20,345 - #12 extends
INFO  17:33:20,345 - #45 Tab
INFO  17:33:20,345 - #3 {
INFO  17:33:20,345 - #45 int
INFO  17:33:20,346 - #45 pos
INFO  17:33:20,346 - #9 [
INFO  17:33:20,346 - #10 ]
INFO  17:33:20,346 - #6 ,
INFO  17:33:20,346 - #45 neg
INFO  17:33:20,346 - #9 [
INFO  17:33:20,346 - #10 ]
INFO  17:33:20,346 - #8 ;
INFO  17:33:20,347 - #3 {
INFO  17:33:20,347 - #38 void
INFO  17:33:20,347 - #45 putp
INFO  17:33:20,347 - #13 (
INFO  17:33:20,348 - #45 int
INFO  17:33:20,348 - #45 a
INFO  17:33:20,352 - #6 ,
INFO  17:33:20,352 - #45 int
INFO  17:33:20,352 - #45 idx
INFO  17:33:20,352 - #14 )
INFO  17:33:20,353 - #3 {
INFO  17:33:20,353 - #45 this
INFO  17:33:20,353 - #37 .
INFO  17:33:20,353 - #45 pos
INFO  17:33:20,353 - #9 [
INFO  17:33:20,353 - #45 idx
INFO  17:33:20,353 - #10 ]
INFO  17:33:20,353 - #5 =
INFO  17:33:20,354 - #45 a
INFO  17:33:20,355 - #8 ;
INFO  17:33:20,356 - #4 }
INFO  17:33:20,357 - #38 void
INFO  17:33:20,357 - #45 putn
INFO  17:33:20,357 - #13 (
INFO  17:33:20,357 - #45 int
INFO  17:33:20,357 - #45 a
INFO  17:33:20,357 - #6 ,
INFO  17:33:20,357 - #45 int
INFO  17:33:20,357 - #45 idx
INFO  17:33:20,357 - #14 )
INFO  17:33:20,358 - #3 {
INFO  17:33:20,358 - #45 this
INFO  17:33:20,358 - #37 .
INFO  17:33:20,358 - #45 neg
INFO  17:33:20,358 - #9 [
INFO  17:33:20,358 - #45 idx
INFO  17:33:20,358 - #10 ]
INFO  17:33:20,358 - #5 =
INFO  17:33:20,358 - #45 a
INFO  17:33:20,358 - #8 ;
INFO  17:33:20,359 - #4 }
INFO  17:33:20,359 - #45 int
INFO  17:33:20,359 - #45 getp
INFO  17:33:20,359 - #13 (
INFO  17:33:20,359 - #45 int
INFO  17:33:20,359 - #45 idx
INFO  17:33:20,359 - #14 )
INFO  17:33:20,359 - #3 {
INFO  17:33:20,359 - #21 return
INFO  17:33:20,359 - #45 pos
INFO  17:33:20,359 - #9 [
INFO  17:33:20,359 - #45 idx
INFO  17:33:20,359 - #10 ]
INFO  17:33:20,359 - #8 ;
INFO  17:33:20,359 - #4 }
INFO  17:33:20,359 - #45 int
INFO  17:33:20,360 - #45 getn
INFO  17:33:20,360 - #13 (
INFO  17:33:20,360 - #45 int
INFO  17:33:20,360 - #45 idx
INFO  17:33:20,360 - #14 )
INFO  17:33:20,360 - #3 {
INFO  17:33:20,360 - #21 return
INFO  17:33:20,360 - #45 neg
INFO  17:33:20,360 - #9 [
INFO  17:33:20,360 - #45 idx
INFO  17:33:20,360 - #10 ]
INFO  17:33:20,361 - #8 ;
INFO  17:33:20,361 - #4 }
INFO  17:33:20,361 - #4 }
INFO  17:33:20,361 - #4 }
INFO  17:33:20,361 - #45 Table
INFO  17:33:20,363 - #45 val
INFO  17:33:20,363 - #8 ;
INFO  17:33:20,363 - #3 {
INFO  17:33:20,363 - #38 void
INFO  17:33:20,363 - #45 f
INFO  17:33:20,363 - #13 (
INFO  17:33:20,363 - #45 char
INFO  17:33:20,363 - #45 ch
INFO  17:33:20,363 - #6 ,
INFO  17:33:20,363 - #45 int
INFO  17:33:20,364 - #45 a
INFO  17:33:20,364 - #6 ,
INFO  17:33:20,364 - #45 int
INFO  17:33:20,364 - #45 arg
INFO  17:33:20,364 - #14 )
INFO  17:33:20,364 - #45 int
INFO  17:33:20,364 - #45 x
INFO  17:33:20,364 - #8 ;
INFO  17:33:20,364 - #3 {
INFO  17:33:20,364 - #45 x
INFO  17:33:20,364 - #5 =
INFO  17:33:20,364 - #45 arg
INFO  17:33:20,364 - #8 ;
INFO  17:33:20,364 - #4 }
INFO  17:33:20,364 - #38 void
INFO  17:33:20,364 - #45 main
INFO  17:33:20,364 - #13 (
INFO  17:33:20,364 - #14 )
INFO  17:33:20,364 - #45 int
INFO  17:33:20,364 - #45 x
INFO  17:33:20,364 - #6 ,
INFO  17:33:20,364 - #45 i
INFO  17:33:20,364 - #8 ;
INFO  17:33:20,365 - #45 char
INFO  17:33:20,365 - #45 c
INFO  17:33:20,365 - #8 ;
INFO  17:33:20,365 - #3 {
INFO  17:33:20,365 - #45 val
INFO  17:33:20,365 - #5 =
INFO  17:33:20,365 - #36 new
INFO  17:33:20,365 - #45 Table
INFO  17:33:20,365 - #8 ;
INFO  17:33:20,365 - #45 val
INFO  17:33:20,365 - #37 .
INFO  17:33:20,365 - #45 pos
INFO  17:33:20,365 - #5 =
INFO  17:33:20,366 - #36 new
INFO  17:33:20,366 - #45 int
INFO  17:33:20,366 - #9 [
INFO  17:33:20,366 - #45 size
INFO  17:33:20,366 - #10 ]
INFO  17:33:20,366 - #8 ;
INFO  17:33:20,366 - #45 val
INFO  17:33:20,366 - #37 .
INFO  17:33:20,366 - #45 neg
INFO  17:33:20,366 - #5 =
INFO  17:33:20,366 - #36 new
INFO  17:33:20,366 - #45 int
INFO  17:33:20,366 - #9 [
INFO  17:33:20,366 - #45 size
INFO  17:33:20,366 - #10 ]
INFO  17:33:20,367 - #8 ;
INFO  17:33:20,367 - #17 for
INFO  17:33:20,367 - #13 (
INFO  17:33:20,367 - #45 i
INFO  17:33:20,367 - #5 =
INFO  17:33:20,367 - #42 0
INFO  17:33:20,367 - #8 ;
INFO  17:33:20,367 - #45 i
INFO  17:33:20,367 - #33 <
INFO  17:33:20,367 - #45 size
INFO  17:33:20,369 - #8 ;
INFO  17:33:20,369 - #45 i
INFO  17:33:20,370 - #23 ++
INFO  17:33:20,370 - #14 )
INFO  17:33:20,370 - #3 {
INFO  17:33:20,370 - #45 val
INFO  17:33:20,370 - #37 .
INFO  17:33:20,370 - #45 putp
INFO  17:33:20,370 - #13 (
INFO  17:33:20,370 - #42 0
INFO  17:33:20,371 - #6 ,
INFO  17:33:20,371 - #45 i
INFO  17:33:20,371 - #14 )
INFO  17:33:20,371 - #8 ;
INFO  17:33:20,371 - #45 val
INFO  17:33:20,371 - #37 .
INFO  17:33:20,371 - #45 putn
INFO  17:33:20,371 - #13 (
INFO  17:33:20,371 - #42 0
INFO  17:33:20,371 - #6 ,
INFO  17:33:20,371 - #45 i
INFO  17:33:20,371 - #14 )
INFO  17:33:20,372 - #8 ;
INFO  17:33:20,372 - #4 }
INFO  17:33:20,372 - #45 f
INFO  17:33:20,372 - #13 (
INFO  17:33:20,372 - #45 c
INFO  17:33:20,372 - #6 ,
INFO  17:33:20,372 - #45 x
INFO  17:33:20,372 - #6 ,
INFO  17:33:20,372 - #45 i
INFO  17:33:20,372 - #14 )
INFO  17:33:20,372 - #8 ;
INFO  17:33:20,372 - #20 read
INFO  17:33:20,372 - #13 (
INFO  17:33:20,372 - #45 x
INFO  17:33:20,372 - #14 )
INFO  17:33:20,372 - #8 ;
INFO  17:33:20,372 - #17 for
INFO  17:33:20,372 - #13 (
INFO  17:33:20,373 - #8 ;
INFO  17:33:20,374 - #45 x
INFO  17:33:20,374 - #31 >
INFO  17:33:20,374 - #42 0
INFO  17:33:20,374 - #8 ;
INFO  17:33:20,374 - #14 )
INFO  17:33:20,375 - #3 {
INFO  17:33:20,375 - #16 if
INFO  17:33:20,375 - #13 (
INFO  17:33:20,375 - #26 -
INFO  17:33:20,375 - #45 size
INFO  17:33:20,375 - #33 <
INFO  17:33:20,375 - #45 x
INFO  17:33:20,375 - #27 &&
INFO  17:33:20,375 - #45 x
INFO  17:33:20,375 - #33 <
INFO  17:33:20,375 - #42 0
INFO  17:33:20,376 - #14 )
INFO  17:33:20,376 - #3 {
INFO  17:33:20,376 - #45 val
INFO  17:33:20,376 - #37 .
INFO  17:33:20,376 - #45 putn
INFO  17:33:20,376 - #13 (
INFO  17:33:20,376 - #45 val
INFO  17:33:20,376 - #37 .
INFO  17:33:20,376 - #45 getn
INFO  17:33:20,376 - #13 (
ERROR 17:33:20,377 - 
Sintaksna greska na liniji 50
INFO  17:33:20,377 - #26 -
INFO  17:33:20,377 - #45 x
INFO  17:33:20,377 - #14 )
INFO  17:33:20,377 - #35 +
INFO  17:33:20,378 - #42 1
INFO  17:33:20,378 - #14 )
INFO  17:33:20,378 - #8 ;
INFO  17:33:20,378 - #4 }
INFO  17:33:20,378 - #20 read
INFO  17:33:20,378 - #13 (
INFO  17:33:20,378 - #45 x
INFO  17:33:20,378 - #14 )
INFO  17:33:20,378 - #8 ;
INFO  17:33:20,378 - #4 }
INFO  17:33:20,378 - #4 }
INFO  17:33:20,378 - #4 }
ERROR 17:33:20,378 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 55
