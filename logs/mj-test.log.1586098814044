INFO  16:59:49,523 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  16:59:49,585 - #2 program
INFO  16:59:49,585 - #45 P
INFO  16:59:49,585 - #7 const
INFO  16:59:49,586 - #45 int
INFO  16:59:49,586 - #45 size
INFO  16:59:49,587 - #5 =
INFO  16:59:49,587 - #42 10
INFO  16:59:49,587 - #8 ;
INFO  16:59:49,588 - #11 abstract
INFO  16:59:49,589 - #15 class
INFO  16:59:49,590 - #45 Tab
INFO  16:59:49,590 - #3 {
INFO  16:59:49,591 - #45 int
INFO  16:59:49,592 - #45 size
INFO  16:59:49,592 - #8 ;
INFO  16:59:49,593 - #3 {
INFO  16:59:49,593 - #11 abstract
INFO  16:59:49,594 - #45 int
INFO  16:59:49,594 - #45 getp
INFO  16:59:49,595 - #13 (
INFO  16:59:49,595 - #45 int
INFO  16:59:49,595 - #45 i
INFO  16:59:49,595 - #14 )
INFO  16:59:49,598 - #8 ;
ERROR 16:59:49,598 - 
Sintaksna greska na liniji 6
INFO  16:59:49,598 - #11 abstract
INFO  16:59:49,598 - #45 int
INFO  16:59:49,598 - #45 getn
INFO  16:59:49,599 - #13 (
INFO  16:59:49,599 - #45 int
INFO  16:59:49,600 - #45 i
INFO  16:59:49,600 - #14 )
INFO  16:59:49,600 - #8 ;
INFO  16:59:49,600 - #45 int
INFO  16:59:49,600 - #45 getSize
INFO  16:59:49,600 - #13 (
ERROR 16:59:49,600 - Izvrsen oporavak do ; u liniji 5
ERROR 16:59:49,601 - 
Sintaksna greska na liniji 8
INFO  16:59:49,601 - #14 )
INFO  16:59:49,601 - #3 {
INFO  16:59:49,601 - #21 return
INFO  16:59:49,601 - #45 size
INFO  16:59:49,601 - #8 ;
INFO  16:59:49,601 - #4 }
INFO  16:59:49,602 - #4 }
INFO  16:59:49,602 - #4 }
INFO  16:59:49,602 - #15 class
INFO  16:59:49,602 - #45 Table
INFO  16:59:49,602 - #12 extends
INFO  16:59:49,602 - #45 Tab
INFO  16:59:49,602 - #3 {
INFO  16:59:49,602 - #45 int
INFO  16:59:49,602 - #45 pos
INFO  16:59:49,602 - #9 [
INFO  16:59:49,603 - #10 ]
INFO  16:59:49,603 - #6 ,
INFO  16:59:49,603 - #45 neg
INFO  16:59:49,603 - #9 [
INFO  16:59:49,603 - #10 ]
INFO  16:59:49,603 - #8 ;
INFO  16:59:49,603 - #3 {
INFO  16:59:49,608 - #38 void
INFO  16:59:49,608 - #45 putp
INFO  16:59:49,609 - #13 (
INFO  16:59:49,609 - #45 int
INFO  16:59:49,609 - #45 a
INFO  16:59:49,609 - #6 ,
INFO  16:59:49,609 - #45 int
INFO  16:59:49,609 - #45 idx
INFO  16:59:49,609 - #14 )
INFO  16:59:49,609 - #3 {
INFO  16:59:49,609 - #45 this
INFO  16:59:49,609 - #37 .
INFO  16:59:49,609 - #45 pos
INFO  16:59:49,609 - #9 [
INFO  16:59:49,610 - #45 idx
INFO  16:59:49,610 - #10 ]
INFO  16:59:49,610 - #5 =
INFO  16:59:49,610 - #45 a
INFO  16:59:49,610 - #8 ;
INFO  16:59:49,610 - #4 }
INFO  16:59:49,610 - #38 void
INFO  16:59:49,610 - #45 putn
INFO  16:59:49,610 - #13 (
INFO  16:59:49,610 - #45 int
INFO  16:59:49,610 - #45 a
INFO  16:59:49,611 - #6 ,
INFO  16:59:49,611 - #45 int
INFO  16:59:49,611 - #45 idx
INFO  16:59:49,611 - #14 )
INFO  16:59:49,611 - #3 {
INFO  16:59:49,611 - #45 this
INFO  16:59:49,611 - #37 .
INFO  16:59:49,611 - #45 neg
INFO  16:59:49,612 - #9 [
INFO  16:59:49,612 - #45 idx
INFO  16:59:49,612 - #10 ]
INFO  16:59:49,612 - #5 =
INFO  16:59:49,612 - #45 a
INFO  16:59:49,612 - #8 ;
INFO  16:59:49,612 - #4 }
INFO  16:59:49,612 - #45 int
INFO  16:59:49,612 - #45 getp
INFO  16:59:49,612 - #13 (
INFO  16:59:49,612 - #45 int
INFO  16:59:49,613 - #45 idx
INFO  16:59:49,613 - #14 )
INFO  16:59:49,613 - #3 {
INFO  16:59:49,613 - #21 return
INFO  16:59:49,613 - #45 pos
INFO  16:59:49,613 - #9 [
INFO  16:59:49,613 - #45 idx
INFO  16:59:49,613 - #10 ]
INFO  16:59:49,613 - #8 ;
INFO  16:59:49,613 - #4 }
INFO  16:59:49,614 - #45 int
INFO  16:59:49,614 - #45 getn
INFO  16:59:49,614 - #13 (
INFO  16:59:49,614 - #45 int
INFO  16:59:49,615 - #45 idx
INFO  16:59:49,615 - #14 )
INFO  16:59:49,615 - #3 {
INFO  16:59:49,615 - #21 return
INFO  16:59:49,615 - #45 neg
INFO  16:59:49,635 - #9 [
INFO  16:59:49,635 - #45 idx
INFO  16:59:49,637 - #10 ]
INFO  16:59:49,639 - #8 ;
INFO  16:59:49,640 - #4 }
INFO  16:59:49,640 - #4 }
INFO  16:59:49,641 - #4 }
INFO  16:59:49,642 - #45 Table
INFO  16:59:49,642 - #45 val
INFO  16:59:49,642 - #8 ;
INFO  16:59:49,643 - #3 {
INFO  16:59:49,643 - #38 void
INFO  16:59:49,643 - #45 f
INFO  16:59:49,643 - #13 (
INFO  16:59:49,643 - #45 char
INFO  16:59:49,644 - #45 ch
INFO  16:59:49,644 - #6 ,
INFO  16:59:49,644 - #45 int
INFO  16:59:49,644 - #45 a
INFO  16:59:49,644 - #6 ,
INFO  16:59:49,645 - #45 int
INFO  16:59:49,645 - #45 arg
INFO  16:59:49,645 - #14 )
INFO  16:59:49,645 - #45 int
INFO  16:59:49,645 - #45 x
INFO  16:59:49,645 - #8 ;
INFO  16:59:49,646 - #3 {
INFO  16:59:49,646 - #45 x
INFO  16:59:49,646 - #5 =
INFO  16:59:49,647 - #45 arg
INFO  16:59:49,647 - #8 ;
INFO  16:59:49,647 - #4 }
INFO  16:59:49,647 - #38 void
INFO  16:59:49,647 - #45 main
INFO  16:59:49,647 - #13 (
INFO  16:59:49,648 - #14 )
INFO  16:59:49,648 - #45 int
INFO  16:59:49,648 - #45 x
INFO  16:59:49,648 - #6 ,
INFO  16:59:49,649 - #45 i
INFO  16:59:49,649 - #8 ;
INFO  16:59:49,649 - #45 char
INFO  16:59:49,649 - #45 c
INFO  16:59:49,649 - #8 ;
INFO  16:59:49,649 - #3 {
INFO  16:59:49,650 - #45 val
INFO  16:59:49,650 - #5 =
INFO  16:59:49,650 - #36 new
INFO  16:59:49,650 - #45 Table
INFO  16:59:49,650 - #8 ;
INFO  16:59:49,650 - #45 val
INFO  16:59:49,650 - #37 .
INFO  16:59:49,650 - #45 pos
INFO  16:59:49,650 - #5 =
INFO  16:59:49,650 - #36 new
INFO  16:59:49,651 - #45 int
INFO  16:59:49,651 - #9 [
INFO  16:59:49,651 - #45 size
INFO  16:59:49,651 - #10 ]
INFO  16:59:49,651 - #8 ;
INFO  16:59:49,651 - #45 val
INFO  16:59:49,651 - #37 .
INFO  16:59:49,652 - #45 neg
INFO  16:59:49,652 - #5 =
INFO  16:59:49,652 - #36 new
INFO  16:59:49,652 - #45 int
INFO  16:59:49,652 - #9 [
INFO  16:59:49,653 - #45 size
INFO  16:59:49,653 - #10 ]
INFO  16:59:49,653 - #8 ;
INFO  16:59:49,653 - #17 for
INFO  16:59:49,653 - #13 (
INFO  16:59:49,653 - #45 i
INFO  16:59:49,653 - #5 =
INFO  16:59:49,654 - #42 0
INFO  16:59:49,654 - #8 ;
INFO  16:59:49,654 - #45 i
INFO  16:59:49,654 - #33 <
INFO  16:59:49,655 - #45 size
INFO  16:59:49,655 - #8 ;
INFO  16:59:49,655 - #45 i
INFO  16:59:49,655 - #23 ++
INFO  16:59:49,656 - #14 )
INFO  16:59:49,657 - #3 {
INFO  16:59:49,657 - #45 val
INFO  16:59:49,657 - #37 .
INFO  16:59:49,657 - #45 putp
INFO  16:59:49,657 - #13 (
INFO  16:59:49,657 - #42 0
INFO  16:59:49,657 - #6 ,
INFO  16:59:49,657 - #45 i
INFO  16:59:49,657 - #14 )
INFO  16:59:49,658 - #8 ;
INFO  16:59:49,658 - #45 val
INFO  16:59:49,658 - #37 .
INFO  16:59:49,658 - #45 putn
INFO  16:59:49,658 - #13 (
INFO  16:59:49,658 - #42 0
INFO  16:59:49,658 - #6 ,
INFO  16:59:49,658 - #45 i
INFO  16:59:49,658 - #14 )
INFO  16:59:49,658 - #8 ;
INFO  16:59:49,658 - #4 }
INFO  16:59:49,659 - #45 f
INFO  16:59:49,659 - #13 (
INFO  16:59:49,659 - #45 c
INFO  16:59:49,659 - #6 ,
INFO  16:59:49,659 - #45 x
INFO  16:59:49,659 - #6 ,
INFO  16:59:49,659 - #45 i
INFO  16:59:49,659 - #14 )
INFO  16:59:49,659 - #8 ;
INFO  16:59:49,660 - #20 read
INFO  16:59:49,660 - #13 (
INFO  16:59:49,660 - #45 x
INFO  16:59:49,660 - #14 )
INFO  16:59:49,660 - #8 ;
INFO  16:59:49,660 - #17 for
INFO  16:59:49,660 - #13 (
INFO  16:59:49,660 - #8 ;
INFO  16:59:49,661 - #45 x
INFO  16:59:49,661 - #31 >
INFO  16:59:49,661 - #42 0
INFO  16:59:49,661 - #8 ;
INFO  16:59:49,661 - #14 )
INFO  16:59:49,661 - #3 {
INFO  16:59:49,661 - #3 {
INFO  16:59:49,661 - #45 val
INFO  16:59:49,661 - #37 .
INFO  16:59:49,661 - #45 putp
INFO  16:59:49,661 - #13 (
INFO  16:59:49,662 - #45 val
INFO  16:59:49,662 - #37 .
INFO  16:59:49,662 - #45 getp
INFO  16:59:49,662 - #13 (
INFO  16:59:49,662 - #45 x
INFO  16:59:49,662 - #14 )
INFO  16:59:49,662 - #35 +
INFO  16:59:49,662 - #42 1
INFO  16:59:49,662 - #14 )
INFO  16:59:49,662 - #8 ;
INFO  16:59:49,662 - #4 }
INFO  16:59:49,663 - #25 else
INFO  16:59:49,663 - #16 if
INFO  16:59:49,663 - #13 (
INFO  16:59:49,663 - #26 -
INFO  16:59:49,663 - #45 size
INFO  16:59:49,663 - #33 <
INFO  16:59:49,663 - #45 x
INFO  16:59:49,663 - #27 &&
INFO  16:59:49,663 - #45 x
INFO  16:59:49,663 - #33 <
INFO  16:59:49,663 - #42 0
INFO  16:59:49,664 - #14 )
INFO  16:59:49,664 - #3 {
INFO  16:59:49,664 - #45 val
INFO  16:59:49,664 - #37 .
INFO  16:59:49,664 - #45 putn
INFO  16:59:49,664 - #13 (
INFO  16:59:49,665 - #45 val
INFO  16:59:49,665 - #37 .
INFO  16:59:49,665 - #45 getn
INFO  16:59:49,665 - #13 (
INFO  16:59:49,665 - #26 -
INFO  16:59:49,665 - #45 x
INFO  16:59:49,665 - #14 )
INFO  16:59:49,665 - #35 +
INFO  16:59:49,665 - #42 1
INFO  16:59:49,665 - #14 )
INFO  16:59:49,665 - #8 ;
INFO  16:59:49,665 - #4 }
INFO  16:59:49,665 - #20 read
INFO  16:59:49,665 - #13 (
INFO  16:59:49,665 - #45 x
INFO  16:59:49,665 - #14 )
INFO  16:59:49,665 - #8 ;
INFO  16:59:49,665 - #4 }
INFO  16:59:49,665 - #4 }
INFO  16:59:49,666 - #4 }
ERROR 16:59:49,666 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 52
