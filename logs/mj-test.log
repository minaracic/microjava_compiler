INFO  13:46:57,766 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  13:46:57,868 - #2 program
INFO  13:46:57,873 - #50 test301
INFO  13:46:57,873 - #7 const
INFO  13:46:57,878 - #50 int
INFO  13:46:57,878 - #50 jedan
INFO  13:46:57,882 - #5 =
INFO  13:46:57,882 - #47 1
INFO  13:46:57,884 - #8 ;
INFO  13:46:57,887 - #7 const
INFO  13:46:57,888 - #50 int
INFO  13:46:57,888 - #50 pet
INFO  13:46:57,889 - #5 =
INFO  13:46:57,889 - #47 5
INFO  13:46:57,889 - #8 ;
INFO  13:46:57,889 - #7 const
INFO  13:46:57,890 - #50 char
INFO  13:46:57,890 - #50 a
INFO  13:46:57,891 - #5 =
INFO  13:46:57,891 - #48 2
INFO  13:46:57,891 - #8 ;
INFO  13:46:57,891 - #50 int
INFO  13:46:57,891 - #50 niz
INFO  13:46:57,892 - #9 [
INFO  13:46:57,892 - #10 ]
INFO  13:46:57,892 - #8 ;
INFO  13:46:57,894 - #50 char
INFO  13:46:57,895 - #50 nizch
INFO  13:46:57,895 - #9 [
INFO  13:46:57,895 - #10 ]
INFO  13:46:57,895 - #8 ;
INFO  13:46:57,896 - #50 bool
INFO  13:46:57,896 - #50 f
INFO  13:46:57,896 - #9 [
INFO  13:46:57,896 - #10 ]
INFO  13:46:57,896 - #8 ;
INFO  13:46:57,897 - #3 {
INFO  13:46:57,897 - #38 void
INFO  13:46:57,898 - #50 main
INFO  13:46:57,899 - #13 (
INFO  13:46:57,899 - #14 )
INFO  13:46:57,900 - #50 int
INFO  13:46:57,902 - #50 nula
INFO  13:46:57,903 - #8 ;
INFO  13:46:57,903 - #3 {
INFO  13:46:57,904 - #50 f
INFO  13:46:57,905 - #5 =
INFO  13:46:57,905 - #36 new
INFO  13:46:57,906 - #50 bool
INFO  13:46:57,906 - #9 [
INFO  13:46:57,906 - #47 10
INFO  13:46:57,906 - #10 ]
INFO  13:46:57,907 - #8 ;
INFO  13:46:57,908 - #50 niz
INFO  13:46:57,910 - #5 =
INFO  13:46:57,910 - #36 new
INFO  13:46:57,911 - #50 int
INFO  13:46:57,911 - #9 [
INFO  13:46:57,912 - #47 13
INFO  13:46:57,913 - #10 ]
INFO  13:46:57,920 - #8 ;
INFO  13:46:57,921 - #50 nizch
INFO  13:46:57,921 - #5 =
INFO  13:46:57,921 - #36 new
INFO  13:46:57,921 - #50 char
INFO  13:46:57,921 - #9 [
INFO  13:46:57,921 - #47 20
INFO  13:46:57,921 - #10 ]
INFO  13:46:57,922 - #8 ;
INFO  13:46:57,922 - #50 nula
INFO  13:46:57,922 - #5 =
INFO  13:46:57,922 - #47 1
INFO  13:46:57,923 - #35 +
INFO  13:46:57,923 - #50 len
INFO  13:46:57,924 - #13 (
INFO  13:46:57,925 - #50 f
INFO  13:46:57,925 - #14 )
INFO  13:46:57,925 - #8 ;
INFO  13:46:57,926 - #22 print
INFO  13:46:57,926 - #13 (
INFO  13:46:57,927 - #47 1
INFO  13:46:57,927 - #35 +
INFO  13:46:57,927 - #50 len
INFO  13:46:57,927 - #13 (
INFO  13:46:57,928 - #50 f
INFO  13:46:57,928 - #14 )
INFO  13:46:57,928 - #14 )
INFO  13:46:57,928 - #8 ;
INFO  13:46:57,928 - #4 }
INFO  13:46:57,929 - #4 }
INFO  13:46:57,951 - Program(
  ProgName(
   test301
  ) [ProgName]
  DeclListVarDecl(
    DeclListVarDecl(
      DeclListVarDecl(
        DeclListConstDecl(
          DeclListConstDecl(
            DeclListConstDecl(
              NoDeclList(
              ) [NoDeclList]
              ConstDecl(
                ConstType(
                  Type(
                   int
                  ) [Type]
                ) [ConstType]
                ConstVarDecl(
                  ConstVarIdent(
                   jedan
                  ) [ConstVarIdent]
                  EQUALOP(
                  ) [EQUALOP]
                  NUMBER(
                   1
                  ) [NUMBER]
                ) [ConstVarDecl]
                NoConstValueList(
                ) [NoConstValueList]
              ) [ConstDecl]
            ) [DeclListConstDecl]
            ConstDecl(
              ConstType(
                Type(
                 int
                ) [Type]
              ) [ConstType]
              ConstVarDecl(
                ConstVarIdent(
                 pet
                ) [ConstVarIdent]
                EQUALOP(
                ) [EQUALOP]
                NUMBER(
                 5
                ) [NUMBER]
              ) [ConstVarDecl]
              NoConstValueList(
              ) [NoConstValueList]
            ) [ConstDecl]
          ) [DeclListConstDecl]
          ConstDecl(
            ConstType(
              Type(
               char
              ) [Type]
            ) [ConstType]
            ConstVarDecl(
              ConstVarIdent(
               a
              ) [ConstVarIdent]
              EQUALOP(
              ) [EQUALOP]
              CHAR(
               2
              ) [CHAR]
            ) [ConstVarDecl]
            NoConstValueList(
            ) [NoConstValueList]
          ) [ConstDecl]
        ) [DeclListConstDecl]
        VarDeclArray(
          ConstType(
            Type(
             int
            ) [Type]
          ) [ConstType]
          ArrayInit(
           niz
          ) [ArrayInit]
          NoVarDeclListList(
          ) [NoVarDeclListList]
        ) [VarDeclArray]
      ) [DeclListVarDecl]
      VarDeclArray(
        ConstType(
          Type(
           char
          ) [Type]
        ) [ConstType]
        ArrayInit(
         nizch
        ) [ArrayInit]
        NoVarDeclListList(
        ) [NoVarDeclListList]
      ) [VarDeclArray]
    ) [DeclListVarDecl]
    VarDeclArray(
      ConstType(
        Type(
         bool
        ) [Type]
      ) [ConstType]
      ArrayInit(
       f
      ) [ArrayInit]
      NoVarDeclListList(
      ) [NoVarDeclListList]
    ) [VarDeclArray]
  ) [DeclListVarDecl]
  WithMethodDeclList(
    NoMethodDeclList(
    ) [NoMethodDeclList]
    MethodDecl(
      FunctionVoid(
       main
      ) [FunctionVoid]
      NoFormPars(
      ) [NoFormPars]
      WithVarDeclList(
        NoVarDeclList(
        ) [NoVarDeclList]
        VarList(
          ConstType(
            Type(
             int
            ) [Type]
          ) [ConstType]
         nula
          NoVarDeclListList(
          ) [NoVarDeclListList]
        ) [VarList]
      ) [WithVarDeclList]
      WithStatementList(
        WithStatementList(
          WithStatementList(
            WithStatementList(
              WithStatementList(
                NoStatementList(
                ) [NoStatementList]
                StatementDesignator(
                  DesignatorAssign(
                    DesignatorIdent(
                     f
                    ) [DesignatorIdent]
                    AEqual(
                      EQUALOP(
                      ) [EQUALOP]
                    ) [AEqual]
                    ExprTerm(
                      TermFactor(
                        FactorNewExpr(
                          Type(
                           bool
                          ) [Type]
                          ExprTerm(
                            TermFactor(
                              FactorConst(
                                NUMBER(
                                 10
                                ) [NUMBER]
                              ) [FactorConst]
                            ) [TermFactor]
                          ) [ExprTerm]
                        ) [FactorNewExpr]
                      ) [TermFactor]
                    ) [ExprTerm]
                  ) [DesignatorAssign]
                ) [StatementDesignator]
              ) [WithStatementList]
              StatementDesignator(
                DesignatorAssign(
                  DesignatorIdent(
                   niz
                  ) [DesignatorIdent]
                  AEqual(
                    EQUALOP(
                    ) [EQUALOP]
                  ) [AEqual]
                  ExprTerm(
                    TermFactor(
                      FactorNewExpr(
                        Type(
                         int
                        ) [Type]
                        ExprTerm(
                          TermFactor(
                            FactorConst(
                              NUMBER(
                               13
                              ) [NUMBER]
                            ) [FactorConst]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [FactorNewExpr]
                    ) [TermFactor]
                  ) [ExprTerm]
                ) [DesignatorAssign]
              ) [StatementDesignator]
            ) [WithStatementList]
            StatementDesignator(
              DesignatorAssign(
                DesignatorIdent(
                 nizch
                ) [DesignatorIdent]
                AEqual(
                  EQUALOP(
                  ) [EQUALOP]
                ) [AEqual]
                ExprTerm(
                  TermFactor(
                    FactorNewExpr(
                      Type(
                       char
                      ) [Type]
                      ExprTerm(
                        TermFactor(
                          FactorConst(
                            NUMBER(
                             20
                            ) [NUMBER]
                          ) [FactorConst]
                        ) [TermFactor]
                      ) [ExprTerm]
                    ) [FactorNewExpr]
                  ) [TermFactor]
                ) [ExprTerm]
              ) [DesignatorAssign]
            ) [StatementDesignator]
          ) [WithStatementList]
          StatementDesignator(
            DesignatorAssign(
              DesignatorIdent(
               nula
              ) [DesignatorIdent]
              AEqual(
                EQUALOP(
                ) [EQUALOP]
              ) [AEqual]
              ExprAddopLeft(
                ExprTerm(
                  TermFactor(
                    FactorConst(
                      NUMBER(
                       1
                      ) [NUMBER]
                    ) [FactorConst]
                  ) [TermFactor]
                ) [ExprTerm]
                AddopPls(
                ) [AddopPls]
                TermFactor(
                  FuncCall(
                    DesignatorIdent(
                     len
                    ) [DesignatorIdent]
                    WithActPars(
                      ActParsExpr(
                        ExprTerm(
                          TermFactor(
                            FactorDesignator(
                              DesignatorIdent(
                               f
                              ) [DesignatorIdent]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [ActParsExpr]
                    ) [WithActPars]
                  ) [FuncCall]
                ) [TermFactor]
              ) [ExprAddopLeft]
            ) [DesignatorAssign]
          ) [StatementDesignator]
        ) [WithStatementList]
        Print(
          ExprAddopLeft(
            ExprTerm(
              TermFactor(
                FactorConst(
                  NUMBER(
                   1
                  ) [NUMBER]
                ) [FactorConst]
              ) [TermFactor]
            ) [ExprTerm]
            AddopPls(
            ) [AddopPls]
            TermFactor(
              FuncCall(
                DesignatorIdent(
                 len
                ) [DesignatorIdent]
                WithActPars(
                  ActParsExpr(
                    ExprTerm(
                      TermFactor(
                        FactorDesignator(
                          DesignatorIdent(
                           f
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [TermFactor]
                    ) [ExprTerm]
                  ) [ActParsExpr]
                ) [WithActPars]
              ) [FuncCall]
            ) [TermFactor]
          ) [ExprAddopLeft]
        ) [Print]
      ) [WithStatementList]
    ) [MethodDecl]
  ) [WithMethodDeclList]
) [Program]
INFO  13:46:57,952 - ==================SEMANTICKA OBRADA=================
INFO  13:46:57,958 - Deklarisana promenljiva jedan na liniji 5
INFO  13:46:57,958 - Deklarisana promenljiva pet na liniji 6
INFO  13:46:57,958 - Deklarisana promenljiva a na liniji 7
INFO  13:46:57,959 - Deklarisana promenljiva niz na liniji 9
INFO  13:46:57,959 - Deklarisana promenljiva nizch na liniji 10
INFO  13:46:57,959 - Deklarisana promenljiva f na liniji 11
INFO  13:46:57,960 - Deklarisana metoda main na liniji 13
INFO  13:46:57,961 - Deklarisana promenljiva nula na liniji 13
INFO  13:46:57,962 - ==================SINTAKSNA ANALIZA=================
INFO  13:46:57,963 - Ukupno deklarisanih globalnih promenljivih:		1
INFO  13:46:57,963 - Ukupno deklarisanih globalnih nizova:			3
INFO  13:46:57,963 - Ukupno deklarisanih globalnih konstanti:			6
INFO  13:46:57,963 - Ukupno deklarisanih lokalnih promenljivih u main metodi:	1
INFO  13:46:58,001 - Parsiranje uspesno zavrseno!
