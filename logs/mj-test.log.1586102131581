INFO  17:55:21,606 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  17:55:21,662 - #2 program
INFO  17:55:21,662 - #45 P
INFO  17:55:21,662 - #7 const
INFO  17:55:21,663 - #45 int
INFO  17:55:21,663 - #45 size
INFO  17:55:21,664 - #5 =
INFO  17:55:21,664 - #42 10
INFO  17:55:21,664 - #8 ;
INFO  17:55:21,665 - #11 abstract
INFO  17:55:21,666 - #15 class
INFO  17:55:21,666 - #45 Tab
INFO  17:55:21,666 - #3 {
INFO  17:55:21,667 - #45 int
INFO  17:55:21,667 - #45 size
INFO  17:55:21,668 - #8 ;
INFO  17:55:21,668 - #3 {
INFO  17:55:21,669 - #11 abstract
INFO  17:55:21,670 - #45 int
INFO  17:55:21,670 - #45 getp
INFO  17:55:21,670 - #13 (
INFO  17:55:21,670 - #45 int
INFO  17:55:21,670 - #45 i
INFO  17:55:21,671 - #14 )
INFO  17:55:21,674 - #11 abstract
INFO  17:55:21,675 - #45 int
INFO  17:55:21,675 - #45 getn
INFO  17:55:21,675 - #13 (
INFO  17:55:21,675 - #45 int
INFO  17:55:21,675 - #45 i
INFO  17:55:21,675 - #14 )
INFO  17:55:21,675 - #45 int
INFO  17:55:21,675 - #45 getSize
INFO  17:55:21,676 - #13 (
INFO  17:55:21,676 - #14 )
INFO  17:55:21,676 - #3 {
INFO  17:55:21,676 - #21 return
INFO  17:55:21,677 - #45 size
INFO  17:55:21,677 - #8 ;
INFO  17:55:21,678 - #4 }
INFO  17:55:21,678 - #4 }
INFO  17:55:21,679 - #4 }
INFO  17:55:21,679 - #15 class
INFO  17:55:21,680 - #45 Table
INFO  17:55:21,680 - #12 extends
INFO  17:55:21,680 - #45 Tab
INFO  17:55:21,680 - #3 {
INFO  17:55:21,680 - #45 int
INFO  17:55:21,680 - #45 pos
INFO  17:55:21,681 - #9 [
INFO  17:55:21,681 - #10 ]
INFO  17:55:21,681 - #6 ,
INFO  17:55:21,681 - #45 neg
INFO  17:55:21,681 - #9 [
INFO  17:55:21,681 - #10 ]
INFO  17:55:21,681 - #8 ;
INFO  17:55:21,682 - #3 {
INFO  17:55:21,682 - #38 void
INFO  17:55:21,683 - #45 putp
INFO  17:55:21,683 - #13 (
INFO  17:55:21,683 - #45 int
INFO  17:55:21,683 - #45 a
INFO  17:55:21,687 - #6 ,
INFO  17:55:21,687 - #45 int
INFO  17:55:21,688 - #45 idx
INFO  17:55:21,688 - #14 )
INFO  17:55:21,688 - #3 {
INFO  17:55:21,688 - #45 this
INFO  17:55:21,688 - #37 .
INFO  17:55:21,688 - #45 pos
INFO  17:55:21,688 - #9 [
INFO  17:55:21,689 - #45 idx
INFO  17:55:21,689 - #10 ]
INFO  17:55:21,689 - #5 =
INFO  17:55:21,689 - #45 a
INFO  17:55:21,690 - #8 ;
INFO  17:55:21,691 - #4 }
INFO  17:55:21,692 - #38 void
INFO  17:55:21,692 - #45 putn
INFO  17:55:21,692 - #13 (
INFO  17:55:21,692 - #45 int
INFO  17:55:21,692 - #45 a
INFO  17:55:21,692 - #6 ,
INFO  17:55:21,692 - #45 int
INFO  17:55:21,692 - #45 idx
INFO  17:55:21,693 - #14 )
INFO  17:55:21,693 - #3 {
INFO  17:55:21,693 - #45 this
INFO  17:55:21,693 - #37 .
INFO  17:55:21,693 - #45 neg
INFO  17:55:21,693 - #9 [
INFO  17:55:21,693 - #45 idx
INFO  17:55:21,693 - #10 ]
INFO  17:55:21,693 - #5 =
INFO  17:55:21,693 - #45 a
INFO  17:55:21,693 - #8 ;
INFO  17:55:21,693 - #4 }
INFO  17:55:21,694 - #45 int
INFO  17:55:21,694 - #45 getp
INFO  17:55:21,694 - #13 (
INFO  17:55:21,694 - #45 int
INFO  17:55:21,694 - #45 idx
INFO  17:55:21,694 - #14 )
INFO  17:55:21,694 - #3 {
INFO  17:55:21,694 - #21 return
INFO  17:55:21,694 - #45 pos
INFO  17:55:21,694 - #9 [
INFO  17:55:21,694 - #45 idx
INFO  17:55:21,695 - #10 ]
INFO  17:55:21,695 - #8 ;
INFO  17:55:21,695 - #4 }
INFO  17:55:21,695 - #45 int
INFO  17:55:21,695 - #45 getn
INFO  17:55:21,695 - #13 (
INFO  17:55:21,695 - #45 int
INFO  17:55:21,695 - #45 idx
INFO  17:55:21,695 - #14 )
INFO  17:55:21,695 - #3 {
INFO  17:55:21,696 - #21 return
INFO  17:55:21,696 - #45 neg
INFO  17:55:21,696 - #9 [
INFO  17:55:21,696 - #45 idx
INFO  17:55:21,696 - #10 ]
INFO  17:55:21,696 - #8 ;
INFO  17:55:21,696 - #4 }
INFO  17:55:21,696 - #4 }
INFO  17:55:21,696 - #4 }
INFO  17:55:21,697 - #45 Table
INFO  17:55:21,719 - #45 val
INFO  17:55:21,720 - #8 ;
INFO  17:55:21,720 - #3 {
INFO  17:55:21,720 - #38 void
INFO  17:55:21,721 - #45 f
INFO  17:55:21,721 - #13 (
INFO  17:55:21,721 - #45 char
INFO  17:55:21,722 - #45 ch
INFO  17:55:21,722 - #6 ,
INFO  17:55:21,722 - #45 int
INFO  17:55:21,722 - #45 a
INFO  17:55:21,723 - #6 ,
INFO  17:55:21,723 - #45 int
INFO  17:55:21,723 - #45 arg
INFO  17:55:21,723 - #14 )
INFO  17:55:21,723 - #45 int
INFO  17:55:21,723 - #45 x
INFO  17:55:21,724 - #8 ;
INFO  17:55:21,724 - #3 {
INFO  17:55:21,724 - #45 x
INFO  17:55:21,724 - #5 =
INFO  17:55:21,724 - #45 arg
INFO  17:55:21,725 - #8 ;
INFO  17:55:21,725 - #4 }
INFO  17:55:21,725 - #38 void
INFO  17:55:21,725 - #45 main
INFO  17:55:21,725 - #13 (
INFO  17:55:21,725 - #14 )
INFO  17:55:21,725 - #45 int
INFO  17:55:21,725 - #45 x
INFO  17:55:21,725 - #6 ,
INFO  17:55:21,726 - #45 i
INFO  17:55:21,726 - #8 ;
INFO  17:55:21,726 - #45 char
INFO  17:55:21,726 - #45 c
INFO  17:55:21,726 - #8 ;
INFO  17:55:21,726 - #3 {
INFO  17:55:21,726 - #45 val
INFO  17:55:21,727 - #5 =
INFO  17:55:21,727 - #36 new
INFO  17:55:21,727 - #45 Table
INFO  17:55:21,727 - #8 ;
INFO  17:55:21,727 - #45 val
INFO  17:55:21,728 - #37 .
INFO  17:55:21,728 - #45 pos
INFO  17:55:21,728 - #5 =
INFO  17:55:21,728 - #36 new
INFO  17:55:21,728 - #45 int
INFO  17:55:21,728 - #9 [
INFO  17:55:21,728 - #45 size
INFO  17:55:21,728 - #10 ]
INFO  17:55:21,729 - #8 ;
INFO  17:55:21,729 - #45 val
INFO  17:55:21,729 - #37 .
INFO  17:55:21,729 - #45 neg
INFO  17:55:21,729 - #5 =
INFO  17:55:21,729 - #36 new
INFO  17:55:21,730 - #45 int
INFO  17:55:21,730 - #9 [
INFO  17:55:21,730 - #45 size
INFO  17:55:21,730 - #10 ]
INFO  17:55:21,730 - #8 ;
INFO  17:55:21,730 - #17 for
INFO  17:55:21,731 - #13 (
INFO  17:55:21,731 - #45 i
INFO  17:55:21,731 - #5 =
INFO  17:55:21,731 - #42 0
INFO  17:55:21,732 - #8 ;
INFO  17:55:21,732 - #45 i
INFO  17:55:21,732 - #33 <
INFO  17:55:21,732 - #45 size
INFO  17:55:21,734 - #8 ;
INFO  17:55:21,735 - #45 i
INFO  17:55:21,735 - #23 ++
INFO  17:55:21,735 - #14 )
INFO  17:55:21,736 - #3 {
INFO  17:55:21,736 - #45 val
INFO  17:55:21,736 - #37 .
INFO  17:55:21,736 - #45 putp
INFO  17:55:21,736 - #13 (
INFO  17:55:21,736 - #42 0
INFO  17:55:21,736 - #6 ,
INFO  17:55:21,736 - #45 i
INFO  17:55:21,736 - #14 )
INFO  17:55:21,737 - #8 ;
INFO  17:55:21,737 - #45 val
INFO  17:55:21,737 - #37 .
INFO  17:55:21,737 - #45 putn
INFO  17:55:21,737 - #13 (
INFO  17:55:21,737 - #42 0
INFO  17:55:21,737 - #6 ,
INFO  17:55:21,737 - #45 i
INFO  17:55:21,737 - #14 )
INFO  17:55:21,737 - #8 ;
INFO  17:55:21,737 - #4 }
INFO  17:55:21,737 - #45 f
INFO  17:55:21,738 - #13 (
INFO  17:55:21,738 - #45 c
INFO  17:55:21,738 - #6 ,
INFO  17:55:21,738 - #45 x
INFO  17:55:21,738 - #6 ,
INFO  17:55:21,738 - #45 i
INFO  17:55:21,738 - #14 )
INFO  17:55:21,738 - #8 ;
INFO  17:55:21,738 - #20 read
INFO  17:55:21,738 - #13 (
INFO  17:55:21,738 - #45 x
INFO  17:55:21,738 - #14 )
INFO  17:55:21,739 - #8 ;
INFO  17:55:21,739 - #17 for
INFO  17:55:21,739 - #13 (
INFO  17:55:21,739 - #8 ;
INFO  17:55:21,740 - #45 x
INFO  17:55:21,740 - #31 >
INFO  17:55:21,740 - #42 0
INFO  17:55:21,740 - #8 ;
INFO  17:55:21,741 - #14 )
INFO  17:55:21,741 - #3 {
INFO  17:55:21,741 - #16 if
INFO  17:55:21,741 - #13 (
INFO  17:55:21,741 - #26 -
INFO  17:55:21,741 - #45 size
INFO  17:55:21,741 - #33 <
INFO  17:55:21,741 - #45 x
INFO  17:55:21,741 - #27 &&
INFO  17:55:21,741 - #45 x
INFO  17:55:21,741 - #33 <
INFO  17:55:21,741 - #42 0
INFO  17:55:21,741 - #14 )
INFO  17:55:21,742 - #3 {
INFO  17:55:21,742 - #45 val
INFO  17:55:21,742 - #37 .
INFO  17:55:21,742 - #45 getn
INFO  17:55:21,742 - #13 (
INFO  17:55:21,742 - #26 -
INFO  17:55:21,742 - #45 x
INFO  17:55:21,742 - #14 )
INFO  17:55:21,743 - #8 ;
INFO  17:55:21,743 - #4 }
INFO  17:55:21,743 - #25 else
INFO  17:55:21,743 - #3 {
INFO  17:55:21,743 - #22 print
INFO  17:55:21,743 - #13 (
INFO  17:55:21,743 - #42 2
INFO  17:55:21,743 - #14 )
INFO  17:55:21,743 - #8 ;
INFO  17:55:21,743 - #4 }
INFO  17:55:21,744 - #25 else
ERROR 17:55:21,744 - 
Sintaksna greska na liniji 56
INFO  17:55:21,744 - #3 {
INFO  17:55:21,744 - #4 }
INFO  17:55:21,744 - #20 read
INFO  17:55:21,745 - #13 (
INFO  17:55:21,745 - #45 x
INFO  17:55:21,745 - #14 )
INFO  17:55:21,746 - #8 ;
INFO  17:55:21,746 - #4 }
INFO  17:55:21,746 - #4 }
INFO  17:55:21,746 - #4 }
ERROR 17:55:21,746 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 61
