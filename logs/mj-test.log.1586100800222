INFO  17:33:02,683 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  17:33:02,762 - #2 program
INFO  17:33:02,762 - #45 P
INFO  17:33:02,762 - #7 const
INFO  17:33:02,763 - #45 int
INFO  17:33:02,763 - #45 size
INFO  17:33:02,764 - #5 =
INFO  17:33:02,764 - #42 10
INFO  17:33:02,764 - #8 ;
INFO  17:33:02,765 - #11 abstract
INFO  17:33:02,765 - #15 class
INFO  17:33:02,766 - #45 Tab
INFO  17:33:02,766 - #3 {
INFO  17:33:02,766 - #45 int
INFO  17:33:02,767 - #45 size
INFO  17:33:02,767 - #8 ;
INFO  17:33:02,768 - #3 {
INFO  17:33:02,768 - #11 abstract
INFO  17:33:02,770 - #45 int
INFO  17:33:02,770 - #45 getp
INFO  17:33:02,770 - #13 (
INFO  17:33:02,770 - #45 int
INFO  17:33:02,770 - #45 i
INFO  17:33:02,770 - #14 )
INFO  17:33:02,773 - #11 abstract
INFO  17:33:02,774 - #45 int
INFO  17:33:02,774 - #45 getn
INFO  17:33:02,774 - #13 (
INFO  17:33:02,774 - #45 int
INFO  17:33:02,774 - #45 i
INFO  17:33:02,774 - #14 )
INFO  17:33:02,774 - #45 int
INFO  17:33:02,775 - #45 getSize
INFO  17:33:02,775 - #13 (
INFO  17:33:02,775 - #14 )
INFO  17:33:02,776 - #3 {
INFO  17:33:02,776 - #21 return
INFO  17:33:02,776 - #45 size
INFO  17:33:02,776 - #8 ;
INFO  17:33:02,777 - #4 }
INFO  17:33:02,777 - #4 }
INFO  17:33:02,778 - #4 }
INFO  17:33:02,778 - #15 class
INFO  17:33:02,779 - #45 Table
INFO  17:33:02,779 - #12 extends
INFO  17:33:02,779 - #45 Tab
INFO  17:33:02,779 - #3 {
INFO  17:33:02,779 - #45 int
INFO  17:33:02,779 - #45 pos
INFO  17:33:02,779 - #9 [
INFO  17:33:02,779 - #10 ]
INFO  17:33:02,779 - #6 ,
INFO  17:33:02,780 - #45 neg
INFO  17:33:02,780 - #9 [
INFO  17:33:02,780 - #10 ]
INFO  17:33:02,780 - #8 ;
INFO  17:33:02,781 - #3 {
INFO  17:33:02,781 - #38 void
INFO  17:33:02,782 - #45 putp
INFO  17:33:02,782 - #13 (
INFO  17:33:02,782 - #45 int
INFO  17:33:02,782 - #45 a
INFO  17:33:02,787 - #6 ,
INFO  17:33:02,787 - #45 int
INFO  17:33:02,787 - #45 idx
INFO  17:33:02,787 - #14 )
INFO  17:33:02,787 - #3 {
INFO  17:33:02,788 - #45 this
INFO  17:33:02,788 - #37 .
INFO  17:33:02,788 - #45 pos
INFO  17:33:02,788 - #9 [
INFO  17:33:02,788 - #45 idx
INFO  17:33:02,788 - #10 ]
INFO  17:33:02,788 - #5 =
INFO  17:33:02,788 - #45 a
INFO  17:33:02,789 - #8 ;
INFO  17:33:02,791 - #4 }
INFO  17:33:02,791 - #38 void
INFO  17:33:02,792 - #45 putn
INFO  17:33:02,792 - #13 (
INFO  17:33:02,792 - #45 int
INFO  17:33:02,792 - #45 a
INFO  17:33:02,792 - #6 ,
INFO  17:33:02,792 - #45 int
INFO  17:33:02,792 - #45 idx
INFO  17:33:02,792 - #14 )
INFO  17:33:02,792 - #3 {
INFO  17:33:02,792 - #45 this
INFO  17:33:02,793 - #37 .
INFO  17:33:02,793 - #45 neg
INFO  17:33:02,793 - #9 [
INFO  17:33:02,793 - #45 idx
INFO  17:33:02,793 - #10 ]
INFO  17:33:02,793 - #5 =
INFO  17:33:02,793 - #45 a
INFO  17:33:02,793 - #8 ;
INFO  17:33:02,793 - #4 }
INFO  17:33:02,793 - #45 int
INFO  17:33:02,794 - #45 getp
INFO  17:33:02,794 - #13 (
INFO  17:33:02,794 - #45 int
INFO  17:33:02,794 - #45 idx
INFO  17:33:02,794 - #14 )
INFO  17:33:02,794 - #3 {
INFO  17:33:02,794 - #21 return
INFO  17:33:02,794 - #45 pos
INFO  17:33:02,795 - #9 [
INFO  17:33:02,795 - #45 idx
INFO  17:33:02,795 - #10 ]
INFO  17:33:02,795 - #8 ;
INFO  17:33:02,795 - #4 }
INFO  17:33:02,795 - #45 int
INFO  17:33:02,795 - #45 getn
INFO  17:33:02,796 - #13 (
INFO  17:33:02,796 - #45 int
INFO  17:33:02,796 - #45 idx
INFO  17:33:02,796 - #14 )
INFO  17:33:02,796 - #3 {
INFO  17:33:02,796 - #21 return
INFO  17:33:02,796 - #45 neg
INFO  17:33:02,796 - #9 [
INFO  17:33:02,796 - #45 idx
INFO  17:33:02,796 - #10 ]
INFO  17:33:02,797 - #8 ;
INFO  17:33:02,797 - #4 }
INFO  17:33:02,797 - #4 }
INFO  17:33:02,797 - #4 }
INFO  17:33:02,797 - #45 Table
INFO  17:33:02,799 - #45 val
INFO  17:33:02,799 - #8 ;
INFO  17:33:02,799 - #3 {
INFO  17:33:02,799 - #38 void
INFO  17:33:02,799 - #45 f
INFO  17:33:02,800 - #13 (
INFO  17:33:02,800 - #45 char
INFO  17:33:02,800 - #45 ch
INFO  17:33:02,800 - #6 ,
INFO  17:33:02,800 - #45 int
INFO  17:33:02,800 - #45 a
INFO  17:33:02,800 - #6 ,
INFO  17:33:02,800 - #45 int
INFO  17:33:02,800 - #45 arg
INFO  17:33:02,800 - #14 )
INFO  17:33:02,800 - #45 int
INFO  17:33:02,800 - #45 x
INFO  17:33:02,800 - #8 ;
INFO  17:33:02,800 - #3 {
INFO  17:33:02,800 - #45 x
INFO  17:33:02,801 - #5 =
INFO  17:33:02,801 - #45 arg
INFO  17:33:02,801 - #8 ;
INFO  17:33:02,801 - #4 }
INFO  17:33:02,801 - #38 void
INFO  17:33:02,801 - #45 main
INFO  17:33:02,801 - #13 (
INFO  17:33:02,801 - #14 )
INFO  17:33:02,801 - #45 int
INFO  17:33:02,801 - #45 x
INFO  17:33:02,801 - #6 ,
INFO  17:33:02,801 - #45 i
INFO  17:33:02,801 - #8 ;
INFO  17:33:02,802 - #45 char
INFO  17:33:02,802 - #45 c
INFO  17:33:02,802 - #8 ;
INFO  17:33:02,802 - #3 {
INFO  17:33:02,802 - #45 val
INFO  17:33:02,802 - #5 =
INFO  17:33:02,802 - #36 new
INFO  17:33:02,802 - #45 Table
INFO  17:33:02,802 - #8 ;
INFO  17:33:02,802 - #45 val
INFO  17:33:02,803 - #37 .
INFO  17:33:02,803 - #45 pos
INFO  17:33:02,803 - #5 =
INFO  17:33:02,803 - #36 new
INFO  17:33:02,803 - #45 int
INFO  17:33:02,803 - #9 [
INFO  17:33:02,803 - #45 size
INFO  17:33:02,803 - #10 ]
INFO  17:33:02,803 - #8 ;
INFO  17:33:02,803 - #45 val
INFO  17:33:02,803 - #37 .
INFO  17:33:02,803 - #45 neg
INFO  17:33:02,803 - #5 =
INFO  17:33:02,803 - #36 new
INFO  17:33:02,804 - #45 int
INFO  17:33:02,804 - #9 [
INFO  17:33:02,804 - #45 size
INFO  17:33:02,804 - #10 ]
INFO  17:33:02,804 - #8 ;
INFO  17:33:02,804 - #17 for
INFO  17:33:02,804 - #13 (
INFO  17:33:02,804 - #45 i
INFO  17:33:02,804 - #5 =
INFO  17:33:02,804 - #42 0
INFO  17:33:02,804 - #8 ;
INFO  17:33:02,804 - #45 i
INFO  17:33:02,804 - #33 <
INFO  17:33:02,805 - #45 size
INFO  17:33:02,806 - #8 ;
INFO  17:33:02,806 - #45 i
INFO  17:33:02,806 - #23 ++
INFO  17:33:02,806 - #14 )
INFO  17:33:02,807 - #3 {
INFO  17:33:02,807 - #45 val
INFO  17:33:02,807 - #37 .
INFO  17:33:02,807 - #45 putp
INFO  17:33:02,807 - #13 (
INFO  17:33:02,807 - #42 0
INFO  17:33:02,807 - #6 ,
INFO  17:33:02,808 - #45 i
INFO  17:33:02,808 - #14 )
INFO  17:33:02,808 - #8 ;
INFO  17:33:02,808 - #45 val
INFO  17:33:02,808 - #37 .
INFO  17:33:02,808 - #45 putn
INFO  17:33:02,808 - #13 (
INFO  17:33:02,808 - #42 0
INFO  17:33:02,808 - #6 ,
INFO  17:33:02,808 - #45 i
INFO  17:33:02,808 - #14 )
INFO  17:33:02,808 - #8 ;
INFO  17:33:02,808 - #4 }
INFO  17:33:02,808 - #45 f
INFO  17:33:02,809 - #13 (
INFO  17:33:02,809 - #45 c
INFO  17:33:02,809 - #6 ,
INFO  17:33:02,809 - #45 x
INFO  17:33:02,809 - #6 ,
INFO  17:33:02,809 - #45 i
INFO  17:33:02,809 - #14 )
INFO  17:33:02,809 - #8 ;
INFO  17:33:02,809 - #20 read
INFO  17:33:02,809 - #13 (
INFO  17:33:02,809 - #45 x
INFO  17:33:02,809 - #14 )
INFO  17:33:02,809 - #8 ;
INFO  17:33:02,809 - #17 for
INFO  17:33:02,809 - #13 (
INFO  17:33:02,809 - #8 ;
INFO  17:33:02,810 - #45 x
INFO  17:33:02,810 - #31 >
INFO  17:33:02,810 - #42 0
INFO  17:33:02,810 - #8 ;
INFO  17:33:02,810 - #14 )
INFO  17:33:02,810 - #3 {
INFO  17:33:02,810 - #16 if
INFO  17:33:02,810 - #13 (
INFO  17:33:02,810 - #42 0
INFO  17:33:02,810 - #34 <=
INFO  17:33:02,811 - #45 x
INFO  17:33:02,811 - #27 &&
INFO  17:33:02,811 - #45 x
INFO  17:33:02,811 - #33 <
INFO  17:33:02,811 - #45 size
INFO  17:33:02,811 - #14 )
INFO  17:33:02,812 - #3 {
INFO  17:33:02,812 - #45 val
INFO  17:33:02,812 - #37 .
INFO  17:33:02,812 - #45 putp
INFO  17:33:02,812 - #13 (
INFO  17:33:02,812 - #45 val
INFO  17:33:02,812 - #37 .
INFO  17:33:02,812 - #45 getp
INFO  17:33:02,812 - #13 (
ERROR 17:33:02,812 - 
Sintaksna greska na liniji 49
INFO  17:33:02,812 - #45 x
INFO  17:33:02,812 - #14 )
INFO  17:33:02,812 - #35 +
INFO  17:33:02,813 - #42 1
INFO  17:33:02,813 - #14 )
INFO  17:33:02,813 - #8 ;
INFO  17:33:02,813 - #4 }
INFO  17:33:02,813 - #4 }
INFO  17:33:02,813 - #4 }
INFO  17:33:02,814 - #4 }
ERROR 17:33:02,814 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 53
