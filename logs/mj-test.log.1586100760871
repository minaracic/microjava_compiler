INFO  17:32:28,211 - Compiling source file: C:\Users\Mina\Desktop\Temp\PP\pp1domaci\MJCompiler\test\program.mj
INFO  17:32:28,272 - #2 program
INFO  17:32:28,272 - #45 P
INFO  17:32:28,273 - #7 const
INFO  17:32:28,274 - #45 int
INFO  17:32:28,274 - #45 size
INFO  17:32:28,275 - #5 =
INFO  17:32:28,276 - #42 10
INFO  17:32:28,276 - #8 ;
INFO  17:32:28,277 - #11 abstract
INFO  17:32:28,278 - #15 class
INFO  17:32:28,278 - #45 Tab
INFO  17:32:28,278 - #3 {
INFO  17:32:28,279 - #45 int
INFO  17:32:28,280 - #45 size
INFO  17:32:28,280 - #8 ;
INFO  17:32:28,281 - #3 {
INFO  17:32:28,282 - #11 abstract
INFO  17:32:28,282 - #45 int
INFO  17:32:28,283 - #45 getp
INFO  17:32:28,283 - #13 (
INFO  17:32:28,283 - #45 int
INFO  17:32:28,283 - #45 i
INFO  17:32:28,283 - #14 )
INFO  17:32:28,285 - #11 abstract
INFO  17:32:28,286 - #45 int
INFO  17:32:28,286 - #45 getn
INFO  17:32:28,287 - #13 (
INFO  17:32:28,287 - #45 int
INFO  17:32:28,287 - #45 i
INFO  17:32:28,287 - #14 )
INFO  17:32:28,288 - #45 int
INFO  17:32:28,288 - #45 getSize
INFO  17:32:28,288 - #13 (
INFO  17:32:28,288 - #14 )
INFO  17:32:28,289 - #3 {
INFO  17:32:28,289 - #21 return
INFO  17:32:28,289 - #45 size
INFO  17:32:28,290 - #8 ;
INFO  17:32:28,290 - #4 }
INFO  17:32:28,290 - #4 }
INFO  17:32:28,291 - #4 }
INFO  17:32:28,291 - #15 class
INFO  17:32:28,292 - #45 Table
INFO  17:32:28,292 - #12 extends
INFO  17:32:28,292 - #45 Tab
INFO  17:32:28,292 - #3 {
INFO  17:32:28,292 - #45 int
INFO  17:32:28,293 - #45 pos
INFO  17:32:28,293 - #9 [
INFO  17:32:28,293 - #10 ]
INFO  17:32:28,293 - #6 ,
INFO  17:32:28,293 - #45 neg
INFO  17:32:28,293 - #9 [
INFO  17:32:28,293 - #10 ]
INFO  17:32:28,293 - #8 ;
INFO  17:32:28,294 - #3 {
INFO  17:32:28,294 - #38 void
INFO  17:32:28,295 - #45 putp
INFO  17:32:28,295 - #13 (
INFO  17:32:28,295 - #45 int
INFO  17:32:28,296 - #45 a
INFO  17:32:28,299 - #6 ,
INFO  17:32:28,300 - #45 int
INFO  17:32:28,300 - #45 idx
INFO  17:32:28,300 - #14 )
INFO  17:32:28,300 - #3 {
INFO  17:32:28,300 - #45 this
INFO  17:32:28,300 - #37 .
INFO  17:32:28,301 - #45 pos
INFO  17:32:28,301 - #9 [
INFO  17:32:28,301 - #45 idx
INFO  17:32:28,301 - #10 ]
INFO  17:32:28,301 - #5 =
INFO  17:32:28,301 - #45 a
INFO  17:32:28,302 - #8 ;
INFO  17:32:28,303 - #4 }
INFO  17:32:28,303 - #38 void
INFO  17:32:28,303 - #45 putn
INFO  17:32:28,304 - #13 (
INFO  17:32:28,304 - #45 int
INFO  17:32:28,304 - #45 a
INFO  17:32:28,304 - #6 ,
INFO  17:32:28,304 - #45 int
INFO  17:32:28,304 - #45 idx
INFO  17:32:28,304 - #14 )
INFO  17:32:28,304 - #3 {
INFO  17:32:28,304 - #45 this
INFO  17:32:28,304 - #37 .
INFO  17:32:28,305 - #45 neg
INFO  17:32:28,305 - #9 [
INFO  17:32:28,305 - #45 idx
INFO  17:32:28,305 - #10 ]
INFO  17:32:28,305 - #5 =
INFO  17:32:28,305 - #45 a
INFO  17:32:28,305 - #8 ;
INFO  17:32:28,305 - #4 }
INFO  17:32:28,305 - #45 int
INFO  17:32:28,305 - #45 getp
INFO  17:32:28,306 - #13 (
INFO  17:32:28,306 - #45 int
INFO  17:32:28,306 - #45 idx
INFO  17:32:28,306 - #14 )
INFO  17:32:28,306 - #3 {
INFO  17:32:28,306 - #21 return
INFO  17:32:28,306 - #45 pos
INFO  17:32:28,306 - #9 [
INFO  17:32:28,306 - #45 idx
INFO  17:32:28,306 - #10 ]
INFO  17:32:28,306 - #8 ;
INFO  17:32:28,307 - #4 }
INFO  17:32:28,307 - #45 int
INFO  17:32:28,307 - #45 getn
INFO  17:32:28,307 - #13 (
INFO  17:32:28,307 - #45 int
INFO  17:32:28,307 - #45 idx
INFO  17:32:28,307 - #14 )
INFO  17:32:28,307 - #3 {
INFO  17:32:28,307 - #21 return
INFO  17:32:28,307 - #45 neg
INFO  17:32:28,307 - #9 [
INFO  17:32:28,307 - #45 idx
INFO  17:32:28,308 - #10 ]
INFO  17:32:28,308 - #8 ;
INFO  17:32:28,308 - #4 }
INFO  17:32:28,308 - #4 }
INFO  17:32:28,308 - #4 }
INFO  17:32:28,308 - #45 Table
INFO  17:32:28,331 - #45 val
INFO  17:32:28,332 - #8 ;
INFO  17:32:28,332 - #3 {
INFO  17:32:28,333 - #38 void
INFO  17:32:28,333 - #45 f
INFO  17:32:28,333 - #13 (
INFO  17:32:28,334 - #45 char
INFO  17:32:28,334 - #45 ch
INFO  17:32:28,334 - #6 ,
INFO  17:32:28,334 - #45 int
INFO  17:32:28,334 - #45 a
INFO  17:32:28,335 - #6 ,
INFO  17:32:28,335 - #45 int
INFO  17:32:28,335 - #45 arg
INFO  17:32:28,335 - #14 )
INFO  17:32:28,335 - #45 int
INFO  17:32:28,336 - #45 x
INFO  17:32:28,336 - #8 ;
INFO  17:32:28,336 - #3 {
INFO  17:32:28,336 - #45 x
INFO  17:32:28,336 - #5 =
INFO  17:32:28,336 - #45 arg
INFO  17:32:28,337 - #8 ;
INFO  17:32:28,337 - #4 }
INFO  17:32:28,337 - #38 void
INFO  17:32:28,337 - #45 main
INFO  17:32:28,337 - #13 (
INFO  17:32:28,338 - #14 )
INFO  17:32:28,338 - #45 int
INFO  17:32:28,338 - #45 x
INFO  17:32:28,338 - #6 ,
INFO  17:32:28,338 - #45 i
INFO  17:32:28,338 - #8 ;
INFO  17:32:28,339 - #45 char
INFO  17:32:28,339 - #45 c
INFO  17:32:28,339 - #8 ;
INFO  17:32:28,340 - #3 {
INFO  17:32:28,340 - #45 val
INFO  17:32:28,340 - #5 =
INFO  17:32:28,340 - #36 new
INFO  17:32:28,341 - #45 Table
INFO  17:32:28,341 - #8 ;
INFO  17:32:28,342 - #45 val
INFO  17:32:28,342 - #37 .
INFO  17:32:28,343 - #45 pos
INFO  17:32:28,343 - #5 =
INFO  17:32:28,344 - #36 new
INFO  17:32:28,344 - #45 int
INFO  17:32:28,344 - #9 [
INFO  17:32:28,345 - #45 size
INFO  17:32:28,345 - #10 ]
INFO  17:32:28,346 - #8 ;
INFO  17:32:28,347 - #45 val
INFO  17:32:28,347 - #37 .
INFO  17:32:28,348 - #45 neg
INFO  17:32:28,348 - #5 =
INFO  17:32:28,348 - #36 new
INFO  17:32:28,348 - #45 int
INFO  17:32:28,349 - #9 [
INFO  17:32:28,349 - #45 size
INFO  17:32:28,349 - #10 ]
INFO  17:32:28,349 - #8 ;
INFO  17:32:28,350 - #17 for
INFO  17:32:28,350 - #13 (
INFO  17:32:28,351 - #45 i
INFO  17:32:28,351 - #5 =
INFO  17:32:28,357 - #42 0
INFO  17:32:28,357 - #8 ;
INFO  17:32:28,357 - #45 i
INFO  17:32:28,358 - #33 <
INFO  17:32:28,358 - #45 size
INFO  17:32:28,360 - #8 ;
INFO  17:32:28,361 - #45 i
INFO  17:32:28,362 - #23 ++
INFO  17:32:28,362 - #14 )
INFO  17:32:28,366 - #3 {
INFO  17:32:28,367 - #45 val
INFO  17:32:28,369 - #37 .
INFO  17:32:28,370 - #45 putp
INFO  17:32:28,371 - #13 (
INFO  17:32:28,371 - #42 0
INFO  17:32:28,371 - #6 ,
INFO  17:32:28,372 - #45 i
INFO  17:32:28,372 - #14 )
INFO  17:32:28,372 - #8 ;
INFO  17:32:28,372 - #45 val
INFO  17:32:28,372 - #37 .
INFO  17:32:28,373 - #45 putn
INFO  17:32:28,373 - #13 (
INFO  17:32:28,373 - #42 0
INFO  17:32:28,373 - #6 ,
INFO  17:32:28,373 - #45 i
INFO  17:32:28,373 - #14 )
INFO  17:32:28,373 - #8 ;
INFO  17:32:28,373 - #4 }
INFO  17:32:28,373 - #45 f
INFO  17:32:28,374 - #13 (
INFO  17:32:28,374 - #45 c
INFO  17:32:28,374 - #6 ,
INFO  17:32:28,374 - #45 x
INFO  17:32:28,374 - #6 ,
INFO  17:32:28,374 - #45 i
INFO  17:32:28,374 - #14 )
INFO  17:32:28,374 - #8 ;
INFO  17:32:28,374 - #20 read
INFO  17:32:28,374 - #13 (
INFO  17:32:28,374 - #45 x
INFO  17:32:28,375 - #14 )
INFO  17:32:28,375 - #8 ;
INFO  17:32:28,375 - #17 for
INFO  17:32:28,375 - #13 (
INFO  17:32:28,375 - #8 ;
INFO  17:32:28,376 - #45 x
INFO  17:32:28,376 - #31 >
INFO  17:32:28,377 - #42 0
INFO  17:32:28,378 - #8 ;
INFO  17:32:28,378 - #14 )
INFO  17:32:28,378 - #3 {
INFO  17:32:28,378 - #16 if
INFO  17:32:28,378 - #13 (
INFO  17:32:28,378 - #42 0
INFO  17:32:28,378 - #34 <=
INFO  17:32:28,378 - #45 x
INFO  17:32:28,379 - #27 &&
INFO  17:32:28,380 - #45 x
INFO  17:32:28,380 - #33 <
INFO  17:32:28,380 - #45 size
INFO  17:32:28,380 - #14 )
INFO  17:32:28,381 - #3 {
INFO  17:32:28,381 - #45 val
INFO  17:32:28,382 - #37 .
INFO  17:32:28,382 - #45 putp
INFO  17:32:28,382 - #13 (
INFO  17:32:28,382 - #45 val
INFO  17:32:28,382 - #37 .
INFO  17:32:28,382 - #45 getp
INFO  17:32:28,382 - #13 (
ERROR 17:32:28,382 - 
Sintaksna greska na liniji 49
INFO  17:32:28,383 - #45 x
INFO  17:32:28,383 - #14 )
INFO  17:32:28,383 - #35 +
INFO  17:32:28,384 - #42 1
INFO  17:32:28,384 - #14 )
INFO  17:32:28,384 - #8 ;
INFO  17:32:28,384 - #4 }
INFO  17:32:28,384 - #25 else
INFO  17:32:28,384 - #20 read
INFO  17:32:28,384 - #13 (
INFO  17:32:28,384 - #45 x
INFO  17:32:28,384 - #14 )
INFO  17:32:28,384 - #8 ;
INFO  17:32:28,385 - #4 }
INFO  17:32:28,385 - #4 }
INFO  17:32:28,385 - #4 }
ERROR 17:32:28,385 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 55
